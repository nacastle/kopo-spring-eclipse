<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bid.dao.BidDAO">

<resultMap type="aTranzVO" id="aTranzMap">
	<result column="tranz_date" property="tranzDate"/>
	<result column="tranz_account_no" property="tranzAccountNo"/>
	<result column="tranz_money" property="tranzMoney"/>
	<result column="tranz_member_nick" property="tranzMemberNick"/>
	<result column="tranz_type" property="tranzType"/>
	<result column="auc_no" property="aucNo"/>
	<result column="member_balance" property="memberBalance"/>
</resultMap>

<resultMap type="aAccountVO" id="aAccountMap">
	<result column="bidder_nick" property="bidderNick" />
	<result column="auc_no" property="aucNo" />
	<result column="bid_money" property="bidMoney" />
</resultMap>

<!-- 마감된 경매 중 환급이 안된 경매번호 리스트 구하기 -->
<select id="selectNotRefundAucList" resultType="int">
	select no
	from HF_AUC_GOODS
	where end_date <![CDATA[<=]]> TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI') and REFUND_STATUS = '미환급' and winning_bid != 0
</select>

<!-- 사용자가 입찰한 경매 중 마감된 경매 번호 최신마감일자 순으로 구하기 -->
<select id="selectMemberClosedAuc" parameterType="String" resultType="int">
	select auc_no
	from 
	    HF_AUC_GOODS g,
	    (select auc_no from HF_A_ACCOUNT
	    where bidder_nick = #{memberNick}) s
	where s.auc_no = g.no and g.end_date <![CDATA[<=]]> to_char(sysdate, 'yyyy-mm-dd hh24:mi')
	order by g.end_date desc
</select>

<!-- 사용자가 입찰한 경매 중 마감된 경매 번호 최신확정일자 순으로 구하기 -->
<select id="selectMemberClosedAucOBConfirmDate" parameterType="String" resultType="int">
	select auc_no
	from 
	    HF_AUC_GOODS g,
	    (select auc_no from HF_A_ACCOUNT
	    where bidder_nick = #{memberNick}) s
	where s.auc_no = g.no and g.end_date <![CDATA[<=]]> to_char(sysdate, 'yyyy-mm-dd hh24:mi')
	order by g.confirm_date desc
</select>

<select id="selectMemberClosedAucOBReturnRequestDate" parameterType="String" resultType="int">
	select auc_no
	from 
	    HF_AUC_GOODS g,
	    (select auc_no from HF_A_ACCOUNT
	    where bidder_nick = #{memberNick}) s
	where s.auc_no = g.no and g.end_date <![CDATA[<=]]> to_char(sysdate, 'yyyy-mm-dd hh24:mi')
	order by g.return_request_date desc
</select>

<!-- 특정 경매의 마감일시 기준으로 그 전까지 입금(입찰)된 정보 가져오기 -->
<select id="selectBidResult" parameterType="int" resultMap="aTranzMap">
	select tranz_member_nick, sum(tranz_money) as member_balance
	from hf_a_tranz	
<!-- 	where auc_no = #{aucNo} and to_char(tranz_date,'YYYY-MM-DD HH24:MI') <![CDATA[<]]> TO_CHAR((select end_date from hf_auc_goods where no = #{aucNo}),'YYYY-MM-DD HH24:MI') -->
	where auc_no = #{aucNo} and to_char(tranz_date,'YYYY-MM-DD HH24:MI') <![CDATA[<]]> (select end_date from hf_auc_goods where no = #{aucNo})
	group by tranz_member_nick
	order by sum(tranz_money) desc

</select>

<update id="updateWinningBid">
	update hf_auc_goods 
	set winning_bid = #{bidMoney}
	where no = #{aucNo}

</update>

<insert id="insertAAccountBid" parameterType="aAccountVO">
	insert into hf_a_account(auc_no, bidder_nick, bid_money)
		values(#{aucNo}, #{bidderNick}, #{bidMoney})
</insert>

<insert id="insertNoti" parameterType="noticeVO">
	insert into hf_notice(noti_no, noti_member_nick, noti_type, noti_content_no, noti_msg)
		values(seq_hf_notice_no.nextval, #{notiMemberNick}, #{notiType}, #{notiContentNo}, #{notiMsg})
</insert>


<update id="addBidMoney" parameterType="aAccountVO">
	update hf_a_account 
<!-- 	set bid_money = bid_money + #{bidMoney} 과거버전-->
	set bid_money = #{bidMoney}
	where auc_no = #{aucNo} and bidder_nick = #{bidderNick}
</update>

<update id="withdrawBidMoney" parameterType="aAccountVO">
	update hf_a_account 
	set bid_money = bid_money - #{bidMoney}
	where auc_no = #{aucNo} and bidder_nick = #{bidderNick}
</update>


<!-- 매입확정 후 경매모임통장에서 빠자나간 돈 입출금 기록 남기기 -->
<!-- <insert id="insertBidTranz" parameterType="aTranzVO"> -->
<!-- 	insert into hf_a_tranz(tranz_account_no, tranz_money, tranz_member_nick, tranz_type, auc_no, member_balance) -->
<!-- 		values( -->
<!-- 		#{tranzAccountNo}, #{tranzMoney}, #{tranzMemberNick}, #{tranzType}, #{aucNo}, -->
<!-- 			(select bid_money from hf_a_account where bidder_nick = #{tranzMemberNick} and auc_no = #{aucNo} ) + #{tranzMoney}  -->
<!-- 		 ) -->
<!-- </insert> -->

<!-- 입찰기록이 있을때 입출금 기록 남기기 (차액으로 입찰하던 버전)-->
<insert id="insertBidTranz" parameterType="aTranzVO">
	insert into hf_a_tranz(tranz_account_no, tranz_money, tranz_member_nick, tranz_type, auc_no, member_balance)
		values(
		#{tranzAccountNo}, #{tranzMoney}, #{tranzMemberNick}, #{tranzType}, #{aucNo},
			(select bid_money from hf_a_account where bidder_nick = #{tranzMemberNick} and auc_no = #{aucNo} ) + #{tranzMoney} 
		 )
</insert>

<!-- 입찰기록이 있을때 입출금 기록 남기기 ()-->
<!-- <insert id="insertBidTranz" parameterType="aTranzVO"> -->
<!-- 	insert into hf_a_tranz(tranz_account_no, tranz_money, tranz_member_nick, tranz_type, auc_no, member_balance) -->
<!-- 		values( -->
<!-- 		#{tranzAccountNo},  -->
<!-- 		#{tranzMoney} - (select bid_money from hf_a_account where bidder_nick = #{tranzMemberNick} and auc_no = #{aucNo} ), -->
<!-- 		#{tranzMemberNick}, #{tranzType}, #{aucNo}, #{tranzMoney}  -->
<!-- 		 ) -->
<!-- </insert> -->

<!-- 입찰기록이 없을때 입출금 기록 남기기 -->
<insert id="insertBidTranzNoBalance" parameterType="aTranzVO">
	insert into hf_a_tranz(tranz_account_no, tranz_money, tranz_member_nick, tranz_type, auc_no, member_balance)
		values(
		#{tranzAccountNo}, #{tranzMoney}, #{tranzMemberNick}, #{tranzType}, #{aucNo}, #{tranzMoney} 
		 )
</insert>

<select id="isBidding" parameterType="aAccountVO" resultMap="aAccountMap">
	select *
	from hf_a_account
	where bidder_nick = #{bidderNick} and auc_no = #{aucNo}
</select>

<select id="selectAAccount" parameterType="int" resultMap="aAccountMap">
	select *
	from hf_a_account
	where auc_no = #{aucNo}
	order by bid_money desc
</select>

<select id="selectATranzLazyLoadByAucNo" parameterType="map"  resultMap="aTranzMap">
	SELECT * 
FROM
    ( 
    SELECT ROWNUM AS RNUM, A.* 
    FROM (
        select 
		to_char(tranz_date,'YYYY-MM-DD HH24:MI:SS') as tranz_date, tranz_account_no, tranz_money, 
		tranz_member_nick, tranz_type, auc_no, member_balance 
	from hf_a_tranz
	where auc_no = #{aucNo}
	order by tranz_date desc
            ) A 
    WHERE ROWNUM  <![CDATA[ <= ]]> #{loadCnt} * #{scrollCnt}
    )
WHERE RNUM > #{loadCnt}*( #{scrollCnt} - 1)
</select>

<select id="selectATranzByAucNo" parameterType="int"  resultMap="aTranzMap">
	select 
		to_char(tranz_date,'YYYY-MM-DD HH24:MI:SS') as tranz_date, tranz_account_no, tranz_money, 
		tranz_member_nick, tranz_type, auc_no, member_balance 
	from hf_a_tranz
	where auc_no = #{aucNo}
	order by tranz_date desc
</select>


</mapper>
